name: CI for Environment (Reusable)

on:
  workflow_call:
    inputs:
      env_name:
        required: true
        type: string
    secrets:
      INFRACOST_API_KEY:
        required: true

jobs:

  # -----------------------------
  # Stage 1: Lint & Format Check
  # -----------------------------
  lint:
    runs-on: ubuntu-latest
    env:
      AWS_ACCESS_KEY_ID: test
      AWS_SECRET_ACCESS_KEY: test
      AWS_REGION: us-east-1

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Setup Terragrunt
        uses: autero1/action-terragrunt@v3
        with:
          terragrunt-version: 0.56.3

      - name: Check Terraform formatting
        run: terraform fmt -check -recursive infrastructure/envs/${{ inputs.env_name }}

      - name: Check Terragrunt HCL formatting
        run: terragrunt hclfmt --check --recursive infrastructure/envs/${{ inputs.env_name }}

  # -----------------------------
  # Stage 2: Validate & Plan
  # -----------------------------
  validate:
    runs-on: ubuntu-latest
    needs: lint
    env:
      AWS_ACCESS_KEY_ID: test
      AWS_SECRET_ACCESS_KEY: test
      AWS_REGION: us-east-1

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Setup Terragrunt
        uses: autero1/action-terragrunt@v3
        with:
          terragrunt-version: 0.56.3

      - name: Initialize Terragrunt
        run: terragrunt init --working-dir infrastructure/envs/${{ inputs.env_name }}

      - name: Validate configuration
        run: terragrunt validate --working-dir infrastructure/envs/${{ inputs.env_name }}

      - name: Generate Terraform plan JSON
        run: |
          terragrunt plan \
            --all \
            --working-dir infrastructure/envs/${{ inputs.env_name }} \
            -out=tf.plan
          terraform show -json tf.plan > infrastructure/envs/${{ inputs.env_name }}/tf.json

      - name: Upload tf.json artifact
        uses: actions/upload-artifact@v4
        with:
          name: tf-json-${{ inputs.env_name }}
          path: infrastructure/envs/${{ inputs.env_name }}/tf.json

  # -----------------------------
  # Stage 3: Checkov Analysis
  # -----------------------------
  analyze:
    runs-on: ubuntu-latest
    needs: validate
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Download tf.json
        uses: actions/download-artifact@v4
        with:
          name: tf-json-${{ inputs.env_name }}
          path: tfjson

      - name: Run Checkov
        run: checkov -f tfjson/tf.json

      - name: Run custom policies (if present)
        run: |
          if [ -d custom_policies ]; then
            checkov -f tfjson/tf.json --external-checks-dir custom_policies
          fi

  # -----------------------------
  # Stage 4: Infracost
  # -----------------------------
  infracost:
    runs-on: ubuntu-latest
    needs: validate
    env:
      AWS_REGION: us-east-1

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Infracost
        uses: infracost/actions/setup@v2
        with:
          api-key: ${{ secrets.INFRACOST_API_KEY }}

      - name: Download tf.json
        uses: actions/download-artifact@v4
        with:
          name: tf-json-${{ inputs.env_name }}
          path: tfjson

      - name: Run Infracost breakdown
        run: |
          infracost breakdown \
            --path=tfjson/tf.json \
            --usage-file=infracost/infracost-usage.yml \
            --format=github-comment \
            --show-skipped \
            --out-file=infracost-${{ inputs.env_name }}.json

      - name: Generate HTML report
        run: |
          infracost output \
            --path=infracost-${{ inputs.env_name }}.json \
            --format=html \
            --out-file=infracost-report-${{ inputs.env_name }}.html

      - name: Upload HTML report
        uses: actions/upload-artifact@v4
        with:
          name: infracost-report-${{ inputs.env_name }}
          path: infracost-report-${{ inputs.env_name }}.html
